server {
    listen 80;
    server_name _;
    # rewrite all plural service(s) and log(s) to a single form
    location ~* ^/services/(.*)$ {
        rewrite ^/services/(.*)$ /service/$1 last;         
    }
    
    # rewrite all "boyar" with "manager"
    location ~* ^/service/boyar/(.*)$ {
        rewrite ^/service/boyar/(.*)$ /service/manager/$1 last;
    }
    # rewrite all "log-service" with "logger"
    location ~* ^/service/logs-service/(.*)$ {
        rewrite ^/service/logs-service/(.*)$ /service/logger/$1 last;
    }
    # rewrite all "management-service" as "ethereum-reader"
    location ~* ^/service/management-service/(.*)$ {
        rewrite ^/service/management-service/(.*)$ /service/ethereum-reader/$1 last;
    }
    
    # handle static log(s) from /opt/orbs for non container services
    location ~* ^/service/(manager|updater|recovery)/log?$ {
        default_type text/plain;
        alias /opt/orbs/$1/log.txt;
    }

    # Expose container status pages
    location ~* ^/service/([a-zA-Z_-]+)/status$ {
        default_type application/json;
        alias /opt/orbs/$1/status.json;
    }

    # manager log is a special case as it is not a service

    # Expose container logs (rewrite request to always be in /log in single )
    location ~ ^/service/([a-zA-Z0-9_.-]+)/logs?$ {
        rewrite ^/service/([a-zA-Z0-9_.-]+)/logs? /service/$1/log break;
        proxy_pass http://logs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
